name: E2E Tests

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to run tests on'
        required: true
        default: 'android'
        type: choice
        options:
          - android
          - ios

jobs:
  e2e-test:
    name: Run E2E Tests
    runs-on: ${{ inputs.platform == 'ios' && 'macos-latest' || 'ubuntu-latest' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build e2e-wrapper package
        run: pnpm build

      # Android specific setup
      - name: Set up JDK 17 (Android)
        if: inputs.platform == 'android'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK (Android)
        if: inputs.platform == 'android'
        uses: android-actions/setup-android@v3

      - name: Install Android Emulator (Android)
        if: inputs.platform == 'android'
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-30;google_apis;x86_64"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name Pixel_3a_API_30_x86 --device "Pixel 3a" --package "system-images;android-30;google_apis;x86_64"

      - name: Start Android Emulator (Android)
        if: inputs.platform == 'android'
        run: |
          echo "Starting emulator..."
          nohup $ANDROID_HOME/emulator/emulator -avd Pixel_3a_API_30_x86 -no-audio -no-boot-anim -no-window -gpu swiftshader_indirect &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
          echo "Emulator started"

      # iOS specific setup
      - name: Install iOS dependencies (iOS)
        if: inputs.platform == 'ios'
        run: |
          # Install applesimutils (required by Detox for iOS testing)
          brew tap wix/brew
          brew install applesimutils
          
          # Install example app dependencies first to make sure React Native is available
          cd examples/TestApp
          pnpm install
          cd ios
          bundle install
          pod install
      
      # Build and run Detox tests
      - name: Build Detox App
        working-directory: examples/TestApp
        env:
          CI: true
        run: |
          if [[ "${{ inputs.platform }}" == "android" ]]; then
            # Create a production bundle for Android
            pnpm react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res
            # Build the app with Detox
            pnpm e2e:android:build
          else
            # Create a production bundle for iOS
            mkdir -p ios/bundle
            pnpm react-native bundle --platform ios --dev false --entry-file index.js --bundle-output ios/bundle/index.ios.jsbundle --assets-dest ios/bundle
            # Make sure the ruby script is executable
            chmod +x ios/use-bundled-js.rb
            # Run the script to update the Xcode project to use the bundled JS
            cd ios && bundle exec ruby use-bundled-js.rb
            cd ..
            # Build the app with Detox
            pnpm e2e:ios:build
          fi

      # Run Detox tests without Metro
      - name: Run Detox Tests
        working-directory: examples/TestApp
        env:
          E2EWRAPPER_LOG: debug
          CI: true
        run: |
          if [[ "${{ inputs.platform }}" == "android" ]]; then
            pnpm e2e:android:run --debug-synchronization 1000 --record-logs all
          else
            pnpm e2e:ios:run --debug-synchronization 1000 --record-logs all
          fi

      # Archive test artifacts
      - name: Archive test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-artifacts
          path: |
            examples/TestApp/artifacts 